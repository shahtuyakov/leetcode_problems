/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number[]}
 */
var intersect = function(nums1, nums2) {
    nums1.sort((a, b) => a - b);
    nums2.sort((a, b) => a - b);
    
    let res = [];
    let arr1, arr2;
    
    if (nums2.length < nums1.length){
        arr2 = nums2;
        arr1 = nums1;
    }
    else {
        arr1 = nums2;
        arr2 = nums1;
    }
    
    for (let i = 0; i < arr2.length; i++){
        for (let j = 0; j < arr1.length; j++){
            if (arr1[j] > arr2[i]){
                break;  
            }
            if (arr2[i] === arr1[j]){
                res.push(arr1[j]);
                arr1.splice(j, 1)
                break;
            }
        }
    }
    return res;
};

------------------------

var intersect = function(nums1, nums2) {
    let hash = {};
    let res = [];
    
    for (let i = 0; i < nums1.length; i++){
        hash[nums1[i]] = (hash[nums1[i]] || 0) + 1;  
    }
    
    for (let i = 0; i < nums2.length; i++){
        if (hash[nums2[i]]){
            res.push(nums2[i]);
            hash[nums2[i]] -= 1;
        }
    }
    return res;
};


