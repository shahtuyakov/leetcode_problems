/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function(l1, l2) {
  if (!l1 || !l2 ) return l1 || l2
  if (l1.val > l2.val){
    [l1, l2] = [l2, l1]
  }
  l1.next = mergeTwoLists(l1.next, l2)
  return l1
    
//     let dummy = new ListNode();
//     let curN = dummy;
    
//     while (l1 && l2){
//         if (l1.val > l2.val){
//             curN.next = l2;
//             l2 = l2.next;
//         }
//         else {
//             curN.next = l1;
//             l1 = l1.next;
//         }
//         curN = curN.next;
//     }
//     curN.next = l1 || l2;
    
//     return dummy.next;
};
