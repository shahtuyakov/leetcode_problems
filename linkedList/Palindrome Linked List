/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {boolean}
 */
var isPalindrome = function(head) {
    let reverse = (head) => {
        let p = null, n = null;
        while (head != null){
            n = head.next;
            head.next = p;
            p = head;
            head = n;
        }
        return p;
    }
    
    let slow=head, fast=head;
    
    while(fast.next != null && fast.next.next != null){
        slow=slow.next;
        fast=fast.next.next;
    }
    
    slow.next = reverse(slow.next);
    slow = slow.next;
    // console.log(slow)
    
    while (slow != null){
        if (head.val !== slow.val) return false;
        head = head.next;
        slow = slow.next;
    }
    return true;
};
